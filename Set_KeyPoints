'''
# set 的使用
set(集合)是一个无序的不重复元素序列，可以使用 {} 或者 set() 函数创建集合。
    + {} 有两种意思：字典（dictionary）和集合（set）
        - {} 里如果为 key-value 对，就表示为字典；
        - {} 里如果是单个值，就表示为集合
    + 当集合中存在重复的元素时，集合会自动去除，利用该特点可实现数据的去重操作
    
set 如何进行增删改查
    
    names = {'zhangsan','lisi','wangwu'}
    
    + names.add('Jack')   # 添加一个元素到集合
    + names.clear()       # 清空一个集合
    + set()               # 定义一个空集合，注意空集合的表示方式不是 {}， {}表示的是空字典
    + names.pop()         # 随机删除一个元素
    + names.remove()      # 删除一个指定的元素，如果指定元素不存在，结果会报错
    + names.update({'liuneng','zhaosi'})   # 在将一个集合拼接到指定的集合内，相当于原有集合中添加新的元素，于add作用类似
    + names.union({'jack','tony'})         # 将多个集合合并为一个新的集合，原集合内容不变
    + 注意，因为集合为无序的，因此不存在查询相关的方法
    + 可以使用 in 方法确认某一元素是否在集合内
    
set 的高级使用方式
    + set 支持很多运算符，但需注意，set 不支持 + 
        - '-'是求两个集合的差集
        - '&'是求两个集合的交集
        - '|'是求两个集合的并集
        - '^'是求两个集合差集的并集，即去除两个集合共有的元素
   
'''

