# PRACTIC 1

'''
user input names, if the name is in the list, return 'The name has existed'; else, show the information 'a new name', 
and ask user to input the age.
'''

persons = [
    {'name': 'zhangsan', 'age': 18},
    {'name': 'lisi', 'age': 20},
    {'name': 'wangwu', 'age': 19},
    {'name': 'jerry', 'age': 21}
]

input_name = input('Please input your name:').lower()

for person in persons:
    if person['name'] == input_name:
        print('The name has existed')
        break
else:
    print('It is a new name')
    new_person = {'name': input_name}
    input_age = int(input('please input your age:'))
    new_person['age'] = input_age
    persons.append(new_person)

for i in persons:
    print(i)
    
    
    
# Method improved

persons = [
    {'name': 'zhangsan', 'age': 18},
    {'name': 'lisi', 'age': 20},
    {'name': 'wangwu', 'age': 19},
    {'name': 'jerry', 'age': 21}
]

input_name = input('Please input your name:').lower()

for person in persons:
    if input_name in person.values():
        print('The name has existed')
        break
else:
    print('It is a new name')
    new_person = {'name': input_name}
    input_age = int(input('please input your age:'))
    new_person['age'] = input_age
    persons.append(new_person)

for i in persons:
    print(i)
    
    
    
#--------------------------------------------------------------------------------------------

# PRACTIC 2

'''
swap Key and Value of dictionary
'''

dict1 = {'a': 100, 'b': 200, 'c': 300, 'd': 400}

# Method 1  采用遍历

dict2 = {}

for k, v in dict1.items():
    dict2[v] = k
    
print(dict2)
print(dict1)



# Method 2  使用字典数据的推导式

dict3 = {v: k for k, v in dict1.items()}
print(dict3)



#---------------------------------------------------------------------------------------------------
'''
there is a list include a lot of student's information. do the following things:
    + count the number who failed in example
    + print the students' name and score who failed in example
    + count the number of student who is nonage
    + print student's name whose telephone number ends with '8'
    + print the student's name with the max score
    + sort from A to B by score
    + delete the student's information if the gender of this student is 'unknown'
'''

students = [
    {'name': 'zhangsan', 'age': 18, 'score': 98, 'tel': '1388888998', 'gender': 'female'},
    {'name': 'lisi', 'age': 28, 'score': 95, 'tel': '1388667789', 'gender': 'male'},
    {'name': 'wangwu', 'age': 21, 'score': 98, 'tel': '1368999990', 'gender': 'unknown'},
    {'name': 'jack', 'age': 17, 'score': 58, 'tel': '1338996845', 'gender': 'male'},
    {'name': 'chris', 'age': 23, 'score': 52, 'tel': '1399999999', 'gender': 'female'},
    {'name': 'tony', 'age': 15, 'score': 89, 'tel': '1398998888', 'gender': 'unknown'}
]

# count the number who failed in example
fail_num = 0
for student in students:
    if student['score'] < 60:
        fail_num += 1
print('There are {} students failed in the example'.format(fail_num))

# print the students' name and score who failed in example
for student in students:
    if student['score'] < 60:
        print(student['name'], student['score'])

# count the number of student who is nonage
count_num = 0
for student in students:
    if student['age'] < 18:
        count_num += 1
print('There are {} nonage in the class'.format(count_num))

# print student's name whose telephone number ends with '8'
for student in students:
    if student['tel'][-1] == '8':
        print(student['name'])

# print the student's name with the max score
student_score = []
for student in students:
    student_score.append(student['score'])

for student in students:
    if student['score'] == max(student_score):
        print(student['name'])



# sort from A to B by score
i = 0
while i < len(students) - 1:
    if students[i]['score'] > students[i + 1]['score']:
        students[i], students[i + 1] = students[i + 1], students[i]
        j = i
        flag = True
        while j > 0:
            if students[j]['score'] < students[j - 1]['score']:
                students[j], students[j - 1] = students[j - 1], students[j]
                flag = False
            if flag == True:
                break
            j -= 1
    i += 1
for student in students:
    print(student)



# delete the student's information if the gender of this student is 'unknown'
i = 0
while i < len(students):
    if students[i]['gender'] == 'unknown':
        students.pop(i)
        i -= 1
    i += 1

for student in students:
    print(student)








